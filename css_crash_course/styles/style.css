* {
    /* CSS reset: remove all margin and padding from all elements */
    margin: 0;
    padding: 0;
}

body {
    /* Manipulating colors */
    background-color: aqua;
    color: #555;
    
    /* Manipulating text font */
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-size: 12px;
    font-weight: bolder;
    /* Shortened */
    font: bolder 12px Verdana, Geneva, Tahoma, sans-serif;

    /* em is used for responsive sizing */
    line-height: 1.6em;

    /* By default, body has a margin. Same goes for h1 */
    margin: 0;
}

.container {
    width: 80%; /* NOTE: using % instead of px makes this size responsive! */
    margin: auto; /* NOTE: this does not center vertically. Essentially, the algo used computes to zero, as the parent calculates height using children, thus an infinite loop would occur. See https://stackoverflow.com/questions/12415661/using-marginauto-to-vertically-align-a-div */
    background-color: chartreuse;
}

.box-1 {
    background-color: rgb(3, 3, 3);
    color: whitesmoke;

    /* NOTE: all shortened versions of sizes arranges sizes as --> top right bottom left (TRBL "treble")

    border-top: 5px red solid;
    border-right: 5px red solid;
    border-bottom: 5px red solid;
    border-left: 5px red solid;
    /* Shortened */
    border: 5px red solid;
    /* Additional customization */
    border-width: 5px;
    border-bottom-width: 10px;
    border-top-style: groove;
    
    padding-top: 10px;
    padding-right: 10px;
    padding-bottom: 10px;
    padding-left: 10px;
    /* Shortened */
    padding: 10px;
    
    margin-top: 10px;
    margin-right: 10px;
    margin-bottom: 10px;
    margin-left: 10px;
    /* Shortened: either TRBL or top-bottom/left-right */
    margin: 10px;
    margin: 20px 30px;
}

.box-1 h1 {
    font-family: Tahoma;
    font-weight: 200;
    font-style: italic;
    text-decoration: line-through;
    text-transform: uppercase;
    letter-spacing: 2em;
    word-spacing: 1em;
}

.box-2 {
    border: 3px dotted grey;
    padding: 20px;
    margin: 20px 0;
}

.categories {
    border: 5px violet solid;
    padding: 10px;
    border-radius: 2em;
}

.categories h2 {
    text-align: center;
}

.categories ul {
    padding: 0;
    padding-left: 20px;
    list-style: square;
    list-style: none;
}

a {
    text-decoration: none;
    color: black;
}

a:hover {
    color: red;
}

a:active {
    color: darkorange;
}

a:visited {
    color: yellow;
}

.categories li {
    padding-bottom: 8px;
    border-bottom: 1px dotted grey;
    list-style-image: url('../images/check.svg');
}

.my-form {
    padding: 50px;
}

.my-form .form-group {
    padding-bottom: 30px;
}

.my-form label {
    display: block;
}

.my-form input[type="text"], .my-form textarea {
    padding: 8px;
    width: 100%;
}

.submit-btn { /* NOTE: in CSS, the rules of specificity are used for which CSS attribute takes precedence. Be careful not to target this instead with an element selector like the above, as this takes priority over class selectors. See https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity, https://learn.launchacademy.com/teams/public/curricula/free/lesson_groups/html_&_css:_basics/lessons/prioritization-in-css */
    background-color: #333;
    color: #fff;
    padding: 10px 15px;
    border: none;
}

.submit-btn:hover {
    background-color: red;
}

.block {
    float: left; /* NOTE: makes blocks aligned horizontally, side-by-side */
    width: 33.3%; /* NOTE: this calculates 33.3% of the parent width, WITHOUT accounting for border or padding, until below */

    border: 1px solid red;
    padding: 10px;
    box-sizing: border-box; /* NOTE: this attribute forces calculation of sizes to include decorators */
}

.clr {
    clear: both; /* NOTE: makes elements with this class clear of the previous float elements */
}

#main-block {
    /* Unrelated - setup attributes */
    padding: 15px;

    float: left;
    width: 70%;
    box-sizing: border-box;
}

#sidebar {
    /* Unrelated - setup attributes */
    background-color: grey;
    color: wheat;
    padding: 15px;

    float: right;
    width: 30%;
    box-sizing: border-box;
}

.p-box {
    /* Unrelated - setup attributes */
    width: 800px;
    height: 500px;
    border: 1px solid black;
    margin-top: 30px;

    position: relative;

    background-image: url('../images/check.svg');
    background-repeat: no-repeat;
    background-position: 100px 200px;
    background-position: center top; /* NOTE: alternative background positioning values */
}

.p-box h1 {
    position: absolute; /* NOTE: using position absolute positions it relative to a parent. If the p-box does not have relative positioning, h1 is aligned to the body. */
    top: 100px;
    left: 200px;
}

.p-box h2 {
    position: absolute;
    right: 100px;
    bottom: 40px;
}

.fix-me {
    position: fixed;
    top: 400px;
}

.my-list li:first-child {
    background: red;
}

.my-list li:last-child {
    background: blueviolet;
}

.my-list li:nth-child(5) {
    background: yellow;
}

.my-list li:nth-child(even) {
    background: grey;
}